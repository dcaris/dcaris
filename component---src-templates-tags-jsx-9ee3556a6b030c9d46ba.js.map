{"version":3,"sources":["webpack:///component---src-templates-tags-jsx-9ee3556a6b030c9d46ba.js","webpack:///./src/templates/tags.jsx"],"names":["webpackJsonp","216","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","pageQuery","undefined","_react","_react2","_propTypes","_propTypes2","_gatsbyLink","_gatsbyLink2","_Post","_Post2","Tags","_ref","pathContext","data","_data$allMarkdownRema","tag","allMarkdownRemark","edges","post","totalCount","frontmatter","title","date","createElement","showMetadata","map","_ref2","node","_node$frontmatter","path","key","to","propTypes","shape","string","isRequired","number","arrayOf"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAqBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAnBvFH,EAAQI,YAAa,EACrBJ,EAAQM,UAAYC,MCRrB,IAAAC,GAAAP,EAAA,GDYKQ,EAAUP,EAAuBM,GCXtCE,EAAAT,EAAA,GDeKU,EAAcT,EAAuBQ,GCZ1CE,EAAAX,EAAA,IDgBKY,EAAeX,EAAuBU,GCf3CE,EAAAb,EAAA,IDmBKc,EAASb,EAAuBY,GCjB/BE,EAAO,SAAAC,GAAyB,GAAvBC,GAAuBD,EAAvBC,YAAaC,EAAUF,EAAVE,KAAUC,GACtBF,EAAPG,IACqBF,EAAKG,mBAA1BC,EAF6BH,EAE7BG,MAMDC,GAR8BJ,EAEtBK,YAOZC,aACEC,MAAO,OACPC,KAAM,OAGV,OACEnB,GAAAJ,QAAAwB,cAAAd,EAAAV,SAAMc,KAAMK,EAAMM,cAAc,GAC9BrB,EAAAJ,QAAAwB,cAAA,UACGN,EAAMQ,IAAI,SAAAC,GAAY,GAAVC,GAAUD,EAAVC,KAAUC,EACCD,EAAKP,YAApBS,EADcD,EACdC,KAAMR,EADQO,EACRP,KACb,OACElB,GAAAJ,QAAAwB,cAAA,MAAIO,IAAKD,GACP1B,EAAAJ,QAAAwB,cAAAhB,EAAAR,SAAMgC,GAAIF,GAAOR,QAS/BX,GAAKsB,WACHpB,YAAaP,EAAAN,QAAUkC,OAAOlB,IAAKV,EAAAN,QAAUmC,OAAOC,aACpDtB,KAAMR,EAAAN,QAAUkC,OACdjB,kBAAmBX,EAAAN,QAAUkC,OAC3Bd,WAAYd,EAAAN,QAAUqC,OAAOD,WAC7BlB,MAAOZ,EAAAN,QAAUsC,QAAQhC,EAAAN,QAAUkC,OACjCN,KAAMtB,EAAAN,QAAUkC,OACdb,YAAaf,EAAAN,QAAUkC,OAAOJ,KAAMxB,EAAAN,QAAUmC,OAAOC,WAAYd,MAAOhB,EAAAN,QAAUmC,OAAOC,iBAE1FA,iBDuCRzC,EAAQK,QClCMW,CAEFV","file":"component---src-templates-tags-jsx-9ee3556a6b030c9d46ba.js","sourcesContent":["webpackJsonp([103555066157098],{\n\n/***/ 216:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(5);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _gatsbyLink = __webpack_require__(11);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _Post = __webpack_require__(27);\n\t\n\tvar _Post2 = _interopRequireDefault(_Post);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Components\n\tvar Tags = function Tags(_ref) {\n\t  var pathContext = _ref.pathContext,\n\t      data = _ref.data;\n\t  var tag = pathContext.tag;\n\t  var _data$allMarkdownRema = data.allMarkdownRemark,\n\t      edges = _data$allMarkdownRema.edges,\n\t      totalCount = _data$allMarkdownRema.totalCount;\n\t\n\t  var tagHeader = totalCount + \" post\" + (totalCount === 1 ? \"\" : \"s\") + \" tagged with \\\"\" + tag + \"\\\"\";\n\t\n\t  var post = {\n\t    frontmatter: {\n\t      title: 'Tags',\n\t      date: null\n\t    }\n\t  };\n\t  return _react2.default.createElement(\n\t    _Post2.default,\n\t    { data: post, showMetadata: false },\n\t    _react2.default.createElement(\n\t      \"ul\",\n\t      null,\n\t      edges.map(function (_ref2) {\n\t        var node = _ref2.node;\n\t        var _node$frontmatter = node.frontmatter,\n\t            path = _node$frontmatter.path,\n\t            title = _node$frontmatter.title;\n\t\n\t        return _react2.default.createElement(\n\t          \"li\",\n\t          { key: path },\n\t          _react2.default.createElement(\n\t            _gatsbyLink2.default,\n\t            { to: path },\n\t            title\n\t          )\n\t        );\n\t      })\n\t    )\n\t  );\n\t};\n\t\n\tTags.propTypes = {\n\t  pathContext: _propTypes2.default.shape({ tag: _propTypes2.default.string.isRequired }),\n\t  data: _propTypes2.default.shape({\n\t    allMarkdownRemark: _propTypes2.default.shape({\n\t      totalCount: _propTypes2.default.number.isRequired,\n\t      edges: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t        node: _propTypes2.default.shape({\n\t          frontmatter: _propTypes2.default.shape({ path: _propTypes2.default.string.isRequired, title: _propTypes2.default.string.isRequired })\n\t        })\n\t      }).isRequired)\n\t    })\n\t  })\n\t};\n\t\n\texports.default = Tags;\n\tvar pageQuery = exports.pageQuery = \"** extracted graphql fragment **\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-tags-jsx-9ee3556a6b030c9d46ba.js","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport Link from \"gatsby-link\";\nimport Post from '../components/Post'\n\nconst Tags = ({pathContext, data}) => {\n  const {tag} = pathContext;\n  const {edges, totalCount} = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n  totalCount === 1\n    ? \"\"\n    : \"s\"} tagged with \"${tag}\"`;\n\n  const post = {\n    frontmatter: {\n      title: 'Tags',\n      date: null\n    }\n  };\n  return (\n    <Post data={post} showMetadata={false}>\n      <ul>\n        {edges.map(({node}) => {\n          const {path, title} = node.frontmatter;\n          return (\n            <li key={path}>\n              <Link to={path}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </Post>\n  );\n};\n\nTags.propTypes = {\n  pathContext: PropTypes.shape({tag: PropTypes.string.isRequired}),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        node: PropTypes.shape({\n          frontmatter: PropTypes.shape({path: PropTypes.string.isRequired, title: PropTypes.string.isRequired})\n        })\n      }).isRequired)\n    })\n  })\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql `\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n// WEBPACK FOOTER //\n// ./src/templates/tags.jsx"],"sourceRoot":""}